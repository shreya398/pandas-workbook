{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOqPj+jA/IFFjg64bqJb3wy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"GxQ2q_zV8diL","executionInfo":{"status":"ok","timestamp":1666883309994,"user_tz":-330,"elapsed":9,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}}},"outputs":[],"source":["#Import Data Set\n"]},{"cell_type":"code","source":["import pandas as pd\n","data=pd.read_csv(\"https://raw.githubusercontent.com/slmsshk/DataSet/main/Regression/NewspaperData.csv\")"],"metadata":{"id":"JdDMB69U8x6e","executionInfo":{"status":"ok","timestamp":1666883317500,"user_tz":-330,"elapsed":6,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"CjzOpWN-9SNH","executionInfo":{"status":"ok","timestamp":1666883321011,"user_tz":-330,"elapsed":35,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"447e4fdf-8fba-4621-afb0-8db9e2585f80"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Newspaper    daily   sunday\n","0       Baltimore Sun  391.952  488.506\n","1        Boston Globe  516.981  798.298\n","2       Boston Herald  355.628  235.084\n","3  Charlotte Observer  238.555  299.451\n","4   Chicago Sun Times  537.780  559.093"],"text/html":["\n","  <div id=\"df-96ebbccd-6dfa-42d2-a9e3-3be3f3dd0dce\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Newspaper</th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Baltimore Sun</td>\n","      <td>391.952</td>\n","      <td>488.506</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Boston Globe</td>\n","      <td>516.981</td>\n","      <td>798.298</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Boston Herald</td>\n","      <td>355.628</td>\n","      <td>235.084</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Charlotte Observer</td>\n","      <td>238.555</td>\n","      <td>299.451</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Chicago Sun Times</td>\n","      <td>537.780</td>\n","      <td>559.093</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96ebbccd-6dfa-42d2-a9e3-3be3f3dd0dce')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-96ebbccd-6dfa-42d2-a9e3-3be3f3dd0dce button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-96ebbccd-6dfa-42d2-a9e3-3be3f3dd0dce');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hS8WVq1x9XzL","executionInfo":{"status":"ok","timestamp":1666883324561,"user_tz":-330,"elapsed":7,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"b14af202-913f-4b62-e626-930f7460f07f"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 34 entries, 0 to 33\n","Data columns (total 3 columns):\n"," #   Column     Non-Null Count  Dtype  \n","---  ------     --------------  -----  \n"," 0   Newspaper  34 non-null     object \n"," 1   daily      34 non-null     float64\n"," 2   sunday     34 non-null     float64\n","dtypes: float64(2), object(1)\n","memory usage: 944.0+ bytes\n"]}]},{"cell_type":"code","source":["#Correlation"],"metadata":{"id":"bAs9DOnf9byi","executionInfo":{"status":"ok","timestamp":1666883329377,"user_tz":-330,"elapsed":4,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["data.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"4dCH9kzy9gex","executionInfo":{"status":"ok","timestamp":1666883332453,"user_tz":-330,"elapsed":9,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"751ad9fc-7115-454d-e7ba-f87156171e90"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           daily    sunday\n","daily   1.000000  0.958154\n","sunday  0.958154  1.000000"],"text/html":["\n","  <div id=\"df-4ce179ac-1612-448c-93b3-cbc3380b73a4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>daily</th>\n","      <td>1.000000</td>\n","      <td>0.958154</td>\n","    </tr>\n","    <tr>\n","      <th>sunday</th>\n","      <td>0.958154</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ce179ac-1612-448c-93b3-cbc3380b73a4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4ce179ac-1612-448c-93b3-cbc3380b73a4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4ce179ac-1612-448c-93b3-cbc3380b73a4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.displot(data['daily'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"pp9SwhB-9mub","executionInfo":{"status":"ok","timestamp":1666883341551,"user_tz":-330,"elapsed":2229,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"d77b8039-60cc-44c1-bc06-0bd548166d3f"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f42787923d0>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 360x360 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.distplot(data['sunday'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"TICIEu889zSA","executionInfo":{"status":"ok","timestamp":1666883344658,"user_tz":-330,"elapsed":791,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"10e366d0-5a9b-4ec7-80d3-2ffedffa88e3"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4275907310>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Fitting a Linear Regression model\n"],"metadata":{"id":"nBaet9eu-D77","executionInfo":{"status":"ok","timestamp":1666883353304,"user_tz":-330,"elapsed":465,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["import statsmodels.formula.api as smf\n","model = smf.ols(\"sunday~daily\",data = data).fit()"],"metadata":{"id":"TVRWL-3F-POv","executionInfo":{"status":"ok","timestamp":1666883366282,"user_tz":-330,"elapsed":756,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["sns.regplot(x=\"daily\", y=\"sunday\", data=data);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"loU0tf2M-Wlq","executionInfo":{"status":"ok","timestamp":1666883372218,"user_tz":-330,"elapsed":1054,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"2fae0146-aecc-4fc2-89ad-9bde167fbb28"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Coefficients\n","model.params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SyRC5_xm-dPp","executionInfo":{"status":"ok","timestamp":1666883373892,"user_tz":-330,"elapsed":12,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"3667bc1e-ba84-43c8-d587-893cc5eccdf3"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Intercept    13.835630\n","daily         1.339715\n","dtype: float64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["(1.33*5025)+13.83"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bu6KVeuw_ChP","executionInfo":{"status":"ok","timestamp":1666883309993,"user_tz":-330,"elapsed":13,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"2be9d212-b6b5-4f4a-c08d-4c1e6c324589"},"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6697.08"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["#  #5025 f(x)+c\n","#  6745.90\n","\n","#  (1.33*5025)+13.83"],"metadata":{"id":"Dj5oDXHh-k5r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#t and p-Values\n","print(model.tvalues, '\\n', model.pvalues)    \n","# print(f'model t-values:\\n{model.tvalues}\\n-----------------\\nmodel p-values: \\n{model.pvalues}')    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r-5Z9pje-rcH","executionInfo":{"status":"ok","timestamp":1666866411663,"user_tz":-330,"elapsed":959,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"44f1cf7a-823b-492c-b40a-f70340e1edc0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Intercept     0.386427\n","daily        18.934840\n","dtype: float64 \n"," Intercept    7.017382e-01\n","daily        6.016802e-19\n","dtype: float64\n"]}]},{"cell_type":"code","source":["# predict value for 150,240"],"metadata":{"id":"PHo51-Ca-xve"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#R squared values\n","(model.rsquared,model.rsquared_adj)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_ND8OMJp-4ma","executionInfo":{"status":"ok","timestamp":1666866462454,"user_tz":-330,"elapsed":6,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"2b24626a-e4e6-48e2-f86b-977874bed4bd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.9180596895873295, 0.9154990548869336)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#Predict for new data points"],"metadata":{"id":"XXxjozAG--Kh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Predict for 200 and 300 daily circulation\n","newdata=pd.Series([200,300])"],"metadata":{"id":"7mB9e37Z_HkY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_pred=pd.DataFrame(newdata,columns=['daily'])"],"metadata":{"id":"BcZHKCcC_NGR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.predict(data_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IH0hM5QW_RkK","executionInfo":{"status":"ok","timestamp":1666866572018,"user_tz":-330,"elapsed":1027,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"e6b42388-0ead-4e08-e77c-6e7843d2fcf5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    281.778581\n","1    415.750057\n","dtype: float64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["newdata=pd.Series([250,350,400,420])"],"metadata":{"id":"B4PnMykc_j3T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_pred=pd.DataFrame(newdata,columns=['daily'])"],"metadata":{"id":"6RujO68f_zN3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.predict(data_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XcGvUm0mAECq","executionInfo":{"status":"ok","timestamp":1666866778980,"user_tz":-330,"elapsed":8,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"cf4a7154-9e1e-466b-8263-0cdd3bd63d81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    348.764319\n","1    482.735795\n","2    549.721533\n","3    576.515828\n","dtype: float64"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"a6DWiWuVEiRd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"8e-n_7WsIZcb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","uploaded=files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"lRqYp7YEIFv1","executionInfo":{"status":"ok","timestamp":1666868997985,"user_tz":-330,"elapsed":13861,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"ec8f46a5-577c-464c-9374-c3529f297c0f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-3bf057f4-d58c-4ed9-9fdb-7a2a0ab823c5\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-3bf057f4-d58c-4ed9-9fdb-7a2a0ab823c5\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving WC_AT.csv to WC_AT.csv\n"]}]},{"cell_type":"code","source":["data1=pd.read_csv(\"WC_AT.csv\")"],"metadata":{"id":"VqNOOvM4Ipn_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gwBHVkmSI_z0","executionInfo":{"status":"ok","timestamp":1666869255719,"user_tz":-330,"elapsed":726,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"f61f6d77-b3f1-4c22-af61-61c25b89c04e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Waist     AT\n","0  74.75  25.72\n","1  72.60  25.89\n","2  81.80  42.60\n","3  83.95  42.80\n","4  74.65  29.84"],"text/html":["\n","  <div id=\"df-4631a22d-a47a-48f6-8c7f-5663cf21f65b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Waist</th>\n","      <th>AT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>74.75</td>\n","      <td>25.72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>72.60</td>\n","      <td>25.89</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>81.80</td>\n","      <td>42.60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>83.95</td>\n","      <td>42.80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>74.65</td>\n","      <td>29.84</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4631a22d-a47a-48f6-8c7f-5663cf21f65b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4631a22d-a47a-48f6-8c7f-5663cf21f65b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4631a22d-a47a-48f6-8c7f-5663cf21f65b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["data1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bdr8sgWrJGeJ","executionInfo":{"status":"ok","timestamp":1666869261036,"user_tz":-330,"elapsed":609,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"ba808876-53ca-4090-f294-ad3531daffe4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 109 entries, 0 to 108\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Waist   109 non-null    float64\n"," 1   AT      109 non-null    float64\n","dtypes: float64(2)\n","memory usage: 1.8 KB\n"]}]},{"cell_type":"code","source":["data1.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"VTuNvvB5JNkw","executionInfo":{"status":"ok","timestamp":1666869265757,"user_tz":-330,"elapsed":835,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"d68d4d16-6efd-41dc-ec56-e7b7c245a94b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Waist        AT\n","Waist  1.000000  0.818558\n","AT     0.818558  1.000000"],"text/html":["\n","  <div id=\"df-6394348c-dec7-4d24-81b2-5eda654da303\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Waist</th>\n","      <th>AT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Waist</th>\n","      <td>1.000000</td>\n","      <td>0.818558</td>\n","    </tr>\n","    <tr>\n","      <th>AT</th>\n","      <td>0.818558</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6394348c-dec7-4d24-81b2-5eda654da303')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6394348c-dec7-4d24-81b2-5eda654da303 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6394348c-dec7-4d24-81b2-5eda654da303');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.distplot(data1['Waist'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":354},"id":"rUuZ68wRJStu","executionInfo":{"status":"ok","timestamp":1666869348806,"user_tz":-330,"elapsed":892,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"d98ba4ea-b25c-455c-e098-630b95532f9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7ff3ac4ff550>"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.distplot(data1['AT'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"hwa8tdiwJ_Qe","executionInfo":{"status":"ok","timestamp":1666869398466,"user_tz":-330,"elapsed":832,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"6e6d6298-9511-4e83-a3c7-47fa2caaffa4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7ff3ac2cbcd0>"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import statsmodels.formula.api as smf\n","model = smf.ols(\"AT~Waist\",data = data1).fit()"],"metadata":{"id":"tyOUxLr2Kq6R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.regplot(x=\"Waist\", y=\"AT\", data=data1);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"GMD7rnxHLaWj","executionInfo":{"status":"ok","timestamp":1666869910868,"user_tz":-330,"elapsed":1027,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"5a13375a-2fe7-4875-c399-a7f4013c12e0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["model.params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RLvkSArCMII3","executionInfo":{"status":"ok","timestamp":1666869956134,"user_tz":-330,"elapsed":1225,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"27bd0fbe-6368-411f-9c33-ed3a53f63391"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Intercept   -215.981488\n","Waist          3.458859\n","dtype: float64"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["(3.4588*5025)-215.981488"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Bqdwc7kNGgI","executionInfo":{"status":"ok","timestamp":1666870190039,"user_tz":-330,"elapsed":549,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"d998ed99-8f13-4301-856c-092d6c1bef90"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["17164.488512"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["#  #5025 f(x)+c\n","#  6745.90\n","\n","#  (3.4588*5025)-215.981488"],"metadata":{"id":"W-9_9snrMkEj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(model.tvalues, '\\n', model.pvalues)    \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1iXH0f26NODC","executionInfo":{"status":"ok","timestamp":1666870238752,"user_tz":-330,"elapsed":625,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"29c9e0ef-f7b2-4209-e71f-9a923beae78b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Intercept    -9.909103\n","Waist        14.740376\n","dtype: float64 \n"," Intercept    8.197416e-17\n","Waist        1.618607e-27\n","dtype: float64\n"]}]},{"cell_type":"code","source":["#R squared values\n","(model.rsquared,model.rsquared_adj)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3CTxpOQ5NgDd","executionInfo":{"status":"ok","timestamp":1666870310429,"user_tz":-330,"elapsed":826,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"e6bf4209-9ebe-446b-b6a8-f7aafd5ae232"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.670036893052843, 0.6669531256981966)"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["newdata=pd.Series([40,70,90,102])"],"metadata":{"id":"fBN01th9NpX9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_pred=pd.DataFrame(newdata,columns=['Waist'])"],"metadata":{"id":"hNyi3oXxNy93"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.predict(data_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q5HUuVFpOW25","executionInfo":{"status":"ok","timestamp":1666870567354,"user_tz":-330,"elapsed":621,"user":{"displayName":"SHREYA GUGGARE","userId":"00326160733976591193"}},"outputId":"23486c0c-6f06-47d5-a07c-2e32a4d79b4d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    -77.627112\n","1     26.138669\n","2     95.315857\n","3    136.822170\n","dtype: float64"]},"metadata":{},"execution_count":60}]}]}